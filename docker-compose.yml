version: '3.8'

services:
  # -------------------------
  # Databases (built from the Dockerfile.* files in ./db)
  # -------------------------
  mysql_inventory:
    build:
      context: ./db
      dockerfile: Dockerfile.inventorydb
    container_name: mysql_inventory
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: inventorydb
      MYSQL_USER: simis
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
      - mysql_inventory_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql_billing:
    build:
      context: ./db
      dockerfile: Dockerfile.billingdb
    container_name: mysql_billing
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: billingdb
      MYSQL_USER: simis
      MYSQL_PASSWORD: password
    ports:
      - "3308:3306"
    volumes:
      - mysql_billing_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql_payments:
    build:
      context: ./db
      dockerfile: Dockerfile.paymentsdb
    container_name: mysql_payments
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: paymentsdb
      MYSQL_USER: simis
      MYSQL_PASSWORD: password
    ports:
      - "3309:3306"
    volumes:
      - mysql_payments_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # -------------------------
  # Inventory service
  # -------------------------
  inventory:
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    container_name: inventory_service
    depends_on:
      mysql_inventory:
        condition: service_healthy
    restart: on-failure
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_inventory:3306/inventorydb
      SPRING_DATASOURCE_USERNAME: simis
      SPRING_DATASOURCE_PASSWORD: password
      SERVER_PORT: 8081
    ports:
      - "8081:8081"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health || true"]
      interval: 10s
      timeout: 5s
      retries: 5

  # -------------------------
  # Payments service
  # -------------------------
  payments:
    build:
      context: ./payments-service
      dockerfile: Dockerfile
    container_name: payments_service
    depends_on:
      mysql_payments:
        condition: service_healthy
      inventory:
        condition: service_started
      billing:
        condition: service_started
    restart: on-failure
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_payments:3306/paymentsdb
      SPRING_DATASOURCE_USERNAME: simis
      SPRING_DATASOURCE_PASSWORD: password
      INVENTORY_BASE: http://inventory:8081   # si tu servicio usa esta var para WebClient
      BILLING_BASE: http://billing:8083
      SERVER_PORT: 8082
    ports:
      - "8082:8082"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health || true"]
      interval: 10s
      timeout: 5s
      retries: 5

  # -------------------------
  # Billing service
  # -------------------------
  billing:
    build:
      context: ./billing-service
      dockerfile: Dockerfile
    container_name: billing_service
    depends_on:
      mysql_billing:
        condition: service_healthy
    restart: on-failure
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_billing:3306/billingdb
      SPRING_DATASOURCE_USERNAME: simis
      SPRING_DATASOURCE_PASSWORD: password
      SERVER_PORT: 8083
    ports:
      - "8083:8083"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health || true"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mysql_inventory_data:
  mysql_billing_data:
  mysql_payments_data:
