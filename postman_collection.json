{
	"info": {
		"_postman_id": "taller5-ventas-notificaciones",
		"name": "Taller 5 - Sistema de Ventas con Notificaciones",
		"description": "Colección completa para probar el sistema de ventas con notificaciones Kafka (proveedores) y JMS (clientes)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Health Checks",
			"item": [
				{
					"name": "Health Check - Aggregator",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8090/actuator/health",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8090",
							"path": ["actuator", "health"]
						},
						"description": "Verifica el estado del servicio Aggregator (DAL)"
					},
					"response": []
				},
				{
					"name": "Health Check - Inventory",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8081/actuator/health",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8081",
							"path": ["actuator", "health"]
						},
						"description": "Verifica el estado del servicio Inventory"
					},
					"response": []
				},
				{
					"name": "Health Check - Payments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8082/actuator/health",
							"protocol": "http",
							"host": ["localhost"],
							"port": "8082",
							"path": ["actuator", "health"]
						},
						"description": "Verifica el estado del servicio Payments"
					},
					"response": []
				}
			],
			"description": "Endpoints para verificar que los servicios estén activos y funcionando correctamente"
		},
		{
			"name": "2. Consultar Productos",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/api/products",
					"protocol": "http",
					"host": ["localhost"],
					"port": "8081",
					"path": ["api", "products"]
				},
				"description": "Obtiene la lista de productos disponibles con sus proveedores asociados. Esta información es necesaria para construir la factura."
			},
			"response": []
		},
		{
			"name": "3. Crear Pago (Opcional)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"customerId\": 123,\n  \"customerEmail\": \"cliente@example.com\",\n  \"amount\": 2660.00\n}"
				},
				"url": {
					"raw": "http://localhost:8082/api/payments/charge",
					"protocol": "http",
					"host": ["localhost"],
					"port": "8082",
					"path": ["api", "payments", "charge"]
				},
				"description": "Crea un pago en el sistema. El ID del pago puede ser usado en la factura (opcional). Si no usas paymentId, la factura se crea igualmente."
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Guardar el paymentId en una variable de entorno",
							"if (pm.response.code === 200) {",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"paymentId\", jsonData.id);",
							"    console.log(\"PaymentId guardado: \" + jsonData.id);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "4A. Crear Factura - SIN paymentId (Simple)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"customerId\": 123,\n  \"customerEmail\": \"cliente@example.com\",\n  \"amount\": 2660.00,\n  \"items\": [\n    {\n      \"productId\": 1,\n      \"productName\": \"Laptop\",\n      \"supplierId\": 1,\n      \"supplierName\": \"TechSupplier Inc\",\n      \"supplierEmail\": \"orders@techsupplier.com\",\n      \"quantity\": 1,\n      \"unitPrice\": 2500.00,\n      \"subtotal\": 2500.00\n    },\n    {\n      \"productId\": 2,\n      \"productName\": \"Mouse\",\n      \"supplierId\": 2,\n      \"supplierName\": \"Electronics Co\",\n      \"supplierEmail\": \"sales@electronicsco.com\",\n      \"quantity\": 4,\n      \"unitPrice\": 40.00,\n      \"subtotal\": 160.00\n    }\n  ]\n}"
				},
				"url": {
					"raw": "http://localhost:8083/api/invoices",
					"protocol": "http",
					"host": ["localhost"],
					"port": "8083",
					"path": ["api", "invoices"]
				},
				"description": "🚀 PASO PRINCIPAL: Crea una factura SIN paymentId previo. Automáticamente dispara:\n- Notificaciones Kafka a cada proveedor (topics: supplier-1, supplier-2)\n- Notificación JMS al cliente (cola: customer-notifications)\n\nDespués de enviar, revisa los logs:\n- docker logs supplier-listener -f\n- docker logs notification-mdb -f"
			},
			"response": []
		},
		{
			"name": "4B. Crear Factura - CON paymentId (Completo)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"paymentId\": {{paymentId}},\n  \"customerId\": 123,\n  \"customerEmail\": \"cliente@example.com\",\n  \"amount\": 2660.00,\n  \"items\": [\n    {\n      \"productId\": 1,\n      \"productName\": \"Laptop\",\n      \"supplierId\": 1,\n      \"supplierName\": \"TechSupplier Inc\",\n      \"supplierEmail\": \"orders@techsupplier.com\",\n      \"quantity\": 1,\n      \"unitPrice\": 2500.00,\n      \"subtotal\": 2500.00\n    },\n    {\n      \"productId\": 2,\n      \"productName\": \"Mouse\",\n      \"supplierId\": 2,\n      \"supplierName\": \"Electronics Co\",\n      \"supplierEmail\": \"sales@electronicsco.com\",\n      \"quantity\": 4,\n      \"unitPrice\": 40.00,\n      \"subtotal\": 160.00\n    }\n  ]\n}"
				},
				"url": {
					"raw": "http://localhost:8083/api/invoices",
					"protocol": "http",
					"host": ["localhost"],
					"port": "8083",
					"path": ["api", "invoices"]
				},
				"description": "🚀 PASO PRINCIPAL: Crea una factura CON paymentId del paso anterior (usa variable {{paymentId}}). Automáticamente dispara:\n- Notificaciones Kafka a cada proveedor (topics: supplier-1, supplier-2)\n- Notificación JMS al cliente (cola: customer-notifications)\n\nNOTA: Primero ejecuta \"3. Crear Pago\" para tener un paymentId guardado.\n\nDespués de enviar, revisa los logs:\n- docker logs supplier-listener -f\n- docker logs notification-mdb -f"
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost"
		}
	]
}
