#Construir y levantar docker compose
docker compose up --build -d


#Ver logs
docker compose logs -f inventory
docker compose logs -f payments
docker compose logs -f billing


#parar y borrar
docker compose down -v


#Construir la imagen del las bases de datos:
docker build -f Dockerfile.inventorydb -t inventory-mysql:1.0 .
docker build -f Dockerfile.billingdb -t billing-mysql:1.0 .
docker build -f Dockerfile.paymentsdb -t payments-mysql:1.0 .

#Levantar el contenedor de las bases de datos:
docker run -d --name mysql_inventory \
  -p 3307:3306 \
  -v mysql_inventory_data:/var/lib/mysql \
  inventory-mysql:1.0

docker run -d --name mysql_billing \
  -p 3308:3306 \
  -v mysql_billing_data:/var/lib/mysql \
  billing-mysql:1.0

docker run -d --name mysql_payments \
  -p 3309:3306 \
  -v mysql_payments_data:/var/lib/mysql \
  payments-mysql:1.0

#Correr cada uno de los services por aparte:
./mvnw -DskipTests spring-boot:run

#curl al inventory-service
curl http://localhost:8081/api/products

#curl al billing-service
curl -s -X POST http://localhost:8083/api/invoices \
  -H "Content-Type: application/json" \
  -d '{"paymentId":1}'

#curl al payments-service
curl -s -X POST http://localhost:8082/api/payments/charge \
  -H "Content-Type: application/json" \
  -d '{"customerId":1,"productId":1,"quantity":1,"amount":2500.00}' 


#Eliminar los contenedores de bases de datos y sus volumes:
docker rm -f mysql_inventory 2>/dev/null || true
docker volume rm mysql_inventory_data 2>/dev/null || true

docker rm -f mysql_billing 2>/dev/null || true
docker volume rm mysql_billing_data 2>/dev/null || true

docker rm -f mysql_payments 2>/dev/null || true
docker volume rm mysql_payments_data 2>/dev/null || true

#Eliminar los contenedores de los servicios:
docker rm -f payments_service 2>/dev/null || true
docker rm -f billing_service 2>/dev/null || true
docker rm -f inventory_service 2>/dev/null || true

#Construir la imagen del servicio por separado:
docker build -f Dockerfile -t inventory-service:1.0 .
docker build -f Dockerfile -t payments-service:1.0 .
docker build -f Dockerfile -t billing-service:1.0 .

#Correr los contenedores de los servicios por separado:
docker run --rm --name inventory-service \
  -p 8081:8080 \
  -e AGGREGATOR_URL="http://host.docker.internal:8090" \
  -e LOGGING_LEVEL_feign=INFO \
  -e LOGGING_LEVEL_com.taller5.inventory.client=DEBUG \
  inventory-service:1.0
  
docker run --rm --name billing-service \
  -p 8083:8080 \
  -e AGGREGATOR_URL="http://host.docker.internal:8090" \
  -e LOGGING_LEVEL_feign=INFO \
  -e LOGGING_LEVEL_com.taller5.billing.client=DEBUG \
  billing-service:1.0

docker run --rm --name payments-service \
  -p 8082:8080 \
  -e AGGREGATOR_URL="http://host.docker.internal:8090" \
  -e LOGGING_LEVEL_feign=INFO \
  -e LOGGING_LEVEL_com.taller5.payments.client=DEBUG \
  payments-service:1.0

#Borrar todos los contenedores existentes:
docker rm -f $(docker ps -aq)
